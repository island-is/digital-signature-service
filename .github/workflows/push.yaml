name: Build and deploy
on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
  
env:
  DOCKER_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com
  SPINNAKER_URL: https://spinnaker-gate.shared.devland.is

jobs:
    build:
        runs-on: ubuntu-24.04
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: '22'
            - run: |
                corepack enable
                yarn install  
            -   name: Get tag 
                id: gettag
                run: |
                    node .github/generate-tag.mjs
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-region: eu-west-1
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2      
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
      
            - name: Cache Docker layers
              uses: actions/cache@v4
              with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-cache-v2-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-buildx-cache-v2
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: "${{ env.DOCKER_REGISTRY }}/dss:${{ github.sha }},${{ env.DOCKER_REGISTRY }}/dss:${{ steps.gettag.outputs.DOCKER_TAG }}"
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
            - name: Generate deployment manifest
              env:
                DOCKER_TAG: ${{ steps.gettag.outputs.DOCKER_TAG }}
                PROD_DEPLOY: ${{ steps.gettag.outputs.PROD_DEPLOY }}
              run: |
                  node .github/modify-charts.mjs
            - name: Upload dev manifest
              uses: ./.github/actions/update-helm-values
              with:
                    ssh-key: ${{ secrets.SSH_KEY }}
                    files: "charts/values.dev.yaml"
                    branch: main
            - name: Upload prod manifest
              if: ${{ steps.gettag.outputs.PROD_DEPLOY == 'true' }}
              uses: ./.github/actions/update-helm-values
              with:
                ssh-key: ${{ secrets.SSH_KEY }}
                files: "charts/values.prod.yaml,charts/values.staging.yaml"
                branch: release
            - name: Move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache